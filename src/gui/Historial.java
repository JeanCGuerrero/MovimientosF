/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import acciones.MovimientoAcciones;
import clases.MovimientoClass;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author JEANG
 */
public class Historial extends javax.swing.JFrame {   
 
    private static Historial historial;
      
    public static Historial obtenInstancia(){
        if(historial==null)
        historial = new Historial();
        historial.setSize(800, 500);
        return historial;
    }
       
     
    ArrayList <MovimientoHistorial> tareasList = new ArrayList<>(); 
    
    private Historial() {
        initComponents();
    }

    /** 
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tareasPanel = new javax.swing.JPanel();

        setTitle("Tareas_pendientes");
        setSize(new java.awt.Dimension(500, 400));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Movimientos");

        tareasPanel.setLayout(new javax.swing.BoxLayout(tareasPanel, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane2.setViewportView(tareasPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        cargarTareas();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel tareasPanel;
    // End of variables declaration//GEN-END:variables

    private void cargarTareas() {
        try {
            ArrayList<MovimientoClass> movimientos = MovimientoAcciones.obtenerTareasHistoricas();            
            tareasList.clear();
            tareasPanel.removeAll();
            for(MovimientoClass tarea : movimientos){
                MovimientoHistorial movimientoHistorial = new MovimientoHistorial(tarea);
                tareasList.add(movimientoHistorial);                
                tareasPanel.add(movimientoHistorial);
            }
            validate();
        } catch (SQLException ex) {
            Logger.getLogger(Historial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }    
    
      void eliminarTarea(MovimientoHistorial movimientoHistorial) { 
        tareasList.remove(movimientoHistorial);
        tareasPanel.remove(movimientoHistorial);
        validate();
    }

    void mostrar() {
        cargarTareas();
        setVisible(true);
        requestFocus();
    }
        
 }
